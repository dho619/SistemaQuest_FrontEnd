{"ast":null,"code":"var _jsxFileName = \"/home/dho/Documentos/InCo/frontend/src/pages/UsuariosLogados/CadastroPesquisado/index.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport api from '../../../services/api';\nimport { getUsuarioLogado } from '../../../services/auth';\nimport { Div, Container } from \"../../../componentsCSS/Form_Cadastro02\";\nimport { setLinkAtual } from '../../../utils/DestacaLink';\nimport { criptografar } from '../../../utils/criptografia';\n\nclass CadastroPesquisado extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: '',\n      error2: '',\n      nome: '',\n      telefone: '',\n      email: '',\n      chave: '',\n      chaveTemp: '',\n      avaliacoes: [],\n      questionario: {}\n    };\n\n    this.loadAvaliacoes = async () => {\n      const {\n        id\n      } = await getUsuarioLogado();\n      api.query({\n        query: gql`\n        query(\n          $id: Int\n        ){\n          schedulesUsuario(filtro: {id: $id}){id chave dataInicio dataFim dataInicioFormatada dataFimFormatada questionario { nome }}\n        }\n      `,\n        variables: {\n          id\n        }\n      }).then(response => {\n        let avaliacoes = response.data.schedulesUsuario;\n        this.setState({\n          avaliacoes\n        });\n      }).catch(e => console.log(e));\n    };\n\n    this.handleContinuar = async e => {\n      e.preventDefault();\n      const {\n        nome,\n        email,\n        telefone,\n        chave,\n        chaveTemp\n      } = this.state;\n\n      if (!nome || !email || !telefone || !chaveTemp) {\n        this.setState({\n          error: 'Preencha todos os campos para continuar!',\n          error2: null\n        });\n      } else if (!chave) {\n        this.setState({\n          error: 'Digite uma chave correta para o questionário!',\n          error2: null\n        });\n      } else {\n        api.mutate({\n          mutation: gql`\n          mutation (\n            $nome: String!\n            $telefone: String!\n            $email: String!\n          ) {\n            novoPesquisado(\n              dados: {\n                nome: $nome\n                email: $email\n                telefone: $telefone\n              }\n            ){\n              id nome email telefone inicioAvaliacao\n            }\n          }\n        `,\n          variables: {\n            nome,\n            email,\n            telefone\n          }\n        }).then(response => {\n          let obj = {\n            CH: chave,\n            PI: response.data.novoPesquisado.id\n          };\n          window.location.href = `/RespondeAval/${criptografar(obj)}`;\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    };\n\n    this.verificaChave = () => {\n      const {\n        chaveTemp,\n        avaliacoes\n      } = this.state;\n      var chave = chaveTemp.toUpperCase();\n      var avaliacao = avaliacoes.filter(av => av.chave === chave);\n\n      if (avaliacao.length) {\n        //se existe essa chave\n        let dataFim = new Date(avaliacao[0].dataFim);\n        let dataInicio = new Date(avaliacao[0].dataInicio); //caso a primeira forma de erro na hora de criar a data\n\n        if (isNaN(dataFim)) dataFim = new Date(parseInt(avaliacao[0].dataFim));\n        if (isNaN(dataInicio)) dataInicio = new Date(parseInt(avaliacao[0].dataInicio));\n\n        if (dataFim < new Date()) {\n          this.setState({\n            error2: `Chave \"${chave}\" expirada em ${avaliacao[0].dataFimFormatada}!`,\n            chave: null,\n            error: null\n          });\n        } else if (dataInicio > new Date()) {\n          this.setState({\n            error2: `Chave \"${chave}\", terá validade apenas a partir de ${avaliacao[0].dataInicioFormatada}!`,\n            chave: null,\n            error: null\n          });\n        } else {\n          this.setState({\n            chave: chave,\n            error2: null,\n            questionario: avaliacao[0].questionario\n          });\n        }\n      } else {\n        this.setState({\n          error2: `Chave \"${chave}\" é inválida!`,\n          chave: null,\n          error: null\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 70);\n    setLinkAtual('cadastroPesquisado');\n    this.loadAvaliacoes();\n  }\n\n  render() {\n    const {\n      telefone,\n      chaveTemp,\n      nome,\n      email,\n      error,\n      error2,\n      chave,\n      questionario\n    } = this.state;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Div, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Preencha os dados para responder o questinario:\")), React.createElement(\"form\", {\n      className: \"Formulario\",\n      onSubmit: this.handleContinuar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, error && React.createElement(\"p\", {\n      className: \"erro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, error), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Chave de Acesso:\"), React.createElement(\"input\", {\n      onBlur: this.verificaChave,\n      value: chaveTemp,\n      style: {\n        \"textTransform\": \"uppercase\"\n      },\n      onChange: e => this.setState({\n        chaveTemp: e.target.value\n      }),\n      placeholder: \"Chave de acesso do Question\\xE1rio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), error2 && React.createElement(\"p\", {\n      className: \"erro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, error2), chave && React.createElement(\"p\", {\n      className: \"messageOK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, questionario.nome), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Identifica\\xE7\\xE3o:\"), React.createElement(\"input\", {\n      value: nome,\n      placeholder: \"Seu Nome\",\n      onChange: e => this.setState({\n        nome: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Formas de Contato:\"), React.createElement(\"input\", {\n      type: \"email\",\n      value: email,\n      placeholder: \"Digite seu melhor email\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"tel\",\n      value: telefone,\n      placeholder: \"Seu telefone ex: 35 99999-8888\",\n      title: \"Formato: 35 99999-8888\",\n      pattern: \"^\\\\d{2} \\\\d{4,5}-\\\\d{4}$\",\n      onChange: e => this.setState({\n        telefone: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Continuar\"))));\n  }\n\n}\n\nexport default withRouter(CadastroPesquisado);","map":{"version":3,"sources":["/home/dho/Documentos/InCo/frontend/src/pages/UsuariosLogados/CadastroPesquisado/index.js"],"names":["React","Component","withRouter","gql","api","getUsuarioLogado","Div","Container","setLinkAtual","criptografar","CadastroPesquisado","state","error","error2","nome","telefone","email","chave","chaveTemp","avaliacoes","questionario","loadAvaliacoes","id","query","variables","then","response","data","schedulesUsuario","setState","catch","e","console","log","handleContinuar","preventDefault","mutate","mutation","obj","CH","PI","novoPesquisado","window","location","href","verificaChave","toUpperCase","avaliacao","filter","av","length","dataFim","Date","dataInicio","isNaN","parseInt","dataFimFormatada","dataInicioFormatada","componentDidMount","scrollTo","render","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport gql from \"graphql-tag\"\n\nimport api from '../../../services/api'\nimport { getUsuarioLogado, } from '../../../services/auth'\nimport { Div, Container } from \"../../../componentsCSS/Form_Cadastro02\";\nimport { setLinkAtual } from '../../../utils/DestacaLink'\nimport { criptografar } from '../../../utils/criptografia'\n\nclass CadastroPesquisado extends Component {\n  state = {\n    error: '',\n    error2: '',\n    nome: '',\n    telefone: '',\n    email: '',\n    chave: '',\n    chaveTemp: '',\n    avaliacoes: [],\n    questionario: {}\n  }\n\n  componentDidMount() { \n    window.scrollTo(0,70)\n    setLinkAtual('cadastroPesquisado')\n    this.loadAvaliacoes()\n  }\n\n  loadAvaliacoes = async () => {\n    const { id } = await getUsuarioLogado()\n    api.query({\n      query: gql`\n        query(\n          $id: Int\n        ){\n          schedulesUsuario(filtro: {id: $id}){id chave dataInicio dataFim dataInicioFormatada dataFimFormatada questionario { nome }}\n        }\n      `,\n      variables: {\n        id,\n      }\n    }).then(response => {\n      let avaliacoes = response.data.schedulesUsuario\n      this.setState({avaliacoes})\n    }).catch(e => console.log(e))\n  }\n\n  handleContinuar = async e => {\n    e.preventDefault();\n    const {nome, email, telefone, chave, chaveTemp } = this.state\n\n    if(!nome || !email || !telefone || !chaveTemp){\n      this.setState({error: 'Preencha todos os campos para continuar!', error2: null})\n    } else if(!chave){\n      this.setState({error: 'Digite uma chave correta para o questionário!', error2: null})\n    } else{\n\n      api.mutate({\n        mutation: gql`\n          mutation (\n            $nome: String!\n            $telefone: String!\n            $email: String!\n          ) {\n            novoPesquisado(\n              dados: {\n                nome: $nome\n                email: $email\n                telefone: $telefone\n              }\n            ){\n              id nome email telefone inicioAvaliacao\n            }\n          }\n        `,\n        variables:{\n          nome,\n          email,\n          telefone\n        }\n      }).then( response => {\n        let obj={CH:chave,PI:response.data.novoPesquisado.id}\n\n        window.location.href= `/RespondeAval/${criptografar(obj)}`;\n      }).catch(e => {\n        console.log(e)\n    })\n    }\n  }\n\n  verificaChave = () => {\n    const { chaveTemp, avaliacoes } = this.state\n    var chave = chaveTemp.toUpperCase()\n    var avaliacao = avaliacoes.filter(av => av.chave === chave)\n\n    if(avaliacao.length){//se existe essa chave\n      let dataFim = new Date(avaliacao[0].dataFim)\n      let dataInicio = new Date(avaliacao[0].dataInicio)\n\n      //caso a primeira forma de erro na hora de criar a data\n      if (isNaN(dataFim)) dataFim = new Date(parseInt(avaliacao[0].dataFim))\n      if (isNaN(dataInicio)) dataInicio = new Date(parseInt(avaliacao[0].dataInicio))\n\n      if (dataFim < new Date()) {\n        this.setState({error2: `Chave \"${chave}\" expirada em ${avaliacao[0].dataFimFormatada}!`,\n                       chave: null, error: null})\n      } \n      else if (dataInicio > new Date()) {\n        this.setState({error2: `Chave \"${chave}\", terá validade apenas a partir de ${avaliacao[0].dataInicioFormatada}!`,\n                       chave: null, error: null})\n      } \n      else {\n        this.setState({chave: chave, error2: null, questionario: avaliacao[0].questionario})\n      }\n    }\n    else {\n      this.setState({error2: `Chave \"${chave}\" é inválida!`,\n                     chave: null, error: null})\n    } \n  }\n\n   render() {\n    const { telefone, chaveTemp, nome, email, error, error2, chave, questionario } = this.state\n    return (\n      <Container>\n        <Div>\n          <header>\n            <h3>Preencha os dados para responder o questinario:</h3>\n          </header>\n          <form className='Formulario' onSubmit={this.handleContinuar}>\n            {error && <p className='erro'>{error}</p>}\n            <div className=\"Group\">\n              <strong>Chave de Acesso:</strong>\n              <input \n                onBlur={this.verificaChave}\n                value={chaveTemp}\n                style={{\"textTransform\": \"uppercase\"}}\n                onChange={e => this.setState({ chaveTemp: e.target.value })}\n                placeholder='Chave de acesso do Questionário'\n              ></input>\n            </div>\n            {error2 && <p className='erro'>{error2}</p>}\n            {chave && <p className='messageOK'>{questionario.nome}</p>}\n            <div className=\"Group\">\n              <strong>Identificação:</strong>\n              <input \n                value={nome}\n                placeholder='Seu Nome'\n                onChange={e => this.setState({ nome: e.target.value })}\n              ></input>\n            </div>\n            <div className=\"Group\">\n              <strong>Formas de Contato:</strong>\n              <input\n                type='email'\n                value={email}\n                placeholder='Digite seu melhor email'\n                onChange={e => this.setState({ email: e.target.value })}\n              ></input>\n              <input \n                type=\"tel\" \n                value={telefone}\n                placeholder=\"Seu telefone ex: 35 99999-8888\"\n                title=\"Formato: 35 99999-8888\"\n                pattern=\"^\\d{2} \\d{4,5}-\\d{4}$\"\n                onChange={e => this.setState({ telefone: e.target.value })}\n              />\n            </div>\n\n            <button type='submit'>Continuar</button>\n            \n          </form>\n        </Div>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(CadastroPesquisado);"]},"metadata":{},"sourceType":"module"}
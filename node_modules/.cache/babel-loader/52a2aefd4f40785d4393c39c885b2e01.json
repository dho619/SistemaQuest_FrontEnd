{"ast":null,"code":"var _jsxFileName = \"/home/dho/Documentos/InCo/frontend/src/pages/Admin/Usuarios/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport api from '../../../services/api';\nimport { setLinkAtual } from '../../../utils/DestacaLink';\nimport { isAdmin } from '../../../services/auth';\nimport iconDel from '../../../assets/IconDel.png';\nimport iconEdt from '../../../assets/IconEdt.png';\nimport iconNew from '../../../assets/IconNew.png';\nimport Form from '../../../componentsCSS/Form_Listagem';\nexport default class Usuarios extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //state e um objeto\n      Users: [],\n      page: 0,\n      UserInfo: {}\n    };\n\n    this.loadUsers = async (page = 0) => {\n      await api.query({\n        query: gql`\n                query{\n                    usuarios{\n                     \tid nome email \n                        ativo created_at updated_at perfis {rotulo}\n\t                }\n                }\n            `\n      }).then(response => {\n        //Simular uma paginasao, ate eu coloca-la no backend ou retirar\n        var Users = [];\n        var aux = [];\n\n        for (let user of response.data.usuarios) {\n          if (aux.length < 10) {\n            aux.push(user);\n          } else {\n            Users.push(aux);\n            aux = [];\n          }\n        }\n\n        if (aux.length > 0) Users.push(aux);\n        this.setState({\n          Users: Users[page],\n          UserInfo: {\n            pages: Users.length - 1\n          }\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.prevPage = () => {\n      const {\n        page\n      } = this.state; //se esta na primeira pagina, ja retorna sem fazer nada\n\n      if (page === 0) return;\n      let pageNumber = page - 1;\n      this.setState({\n        page: pageNumber\n      });\n      this.loadUsers(pageNumber);\n    };\n\n    this.nextPage = () => {\n      const {\n        page,\n        UserInfo\n      } = this.state; //se esta na ultima pagina, ja retorna sem fazer nada\n\n      if (page === UserInfo.pages) return;\n      const pageNumber = page + 1;\n      this.setState({\n        page: pageNumber\n      });\n      this.loadUsers(pageNumber); //chamando a funcao de mostrar a pagina\n    };\n\n    this.Deleteuser = async filtro => {\n      if (isAdmin()) {\n        //let confirma = confirm(\"Deseja realmente apagar esse usuario?\")\n        // if (!confirma) return null\n        api.mutate({\n          mutation: gql`\n                    mutation(\n                        $id: Int\n                    ){\n                        excluirUsuario (\n                            filtro: {\n                                id: $id\n                            }\n                        ){\n                            id nome email\n                        }\n                    }\n                `,\n          variables: {\n            id: filtro.id\n          }\n        }).then(resultado => {\n          console.log(resultado.data.excluirUsuario);\n        }).catch(e => {\n          console.log(e);\n        });\n        const {\n          page\n        } = this.state;\n        this.loadUsers(page);\n      } else {\n        alert('Você não tem essa permissão!');\n      }\n    };\n  }\n\n  //componentDidMount executa assim que e criado a pagina\n  componentDidMount() {\n    //nao clk o \"() => \", pq e uma funcao da proprio js\n    setLinkAtual('usuarios');\n    this.loadUsers();\n  }\n\n  //render sempre executa novamente, se alguma variavel do state for alterada\n  render() {\n    const {\n      Users,\n      page,\n      UserInfo\n    } = this.state; //desistruturando\n    //a key no h2 e passada, pq o react pede que tenha uma key unica pra cada item da iteracao\n\n    return React.createElement(Form, {\n      onSubmit: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Lista de usuarios:\"), React.createElement(Link, {\n      to: `/signupAdmin`,\n      title: \"Novo Usuario\",\n      className: \"btIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Imagem Novo Usuario\",\n      src: iconNew,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))), //aqui codigo javascript, apos \"=> (\" volta a ser html\n    Users.map(user => React.createElement(\"article\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, user.nome), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, user.email), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Ativo: \", user.ativo ? 'Sim' : 'Não'), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Criado em \", user.created_at), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Ultima atualiza\\xE7\\xE3o em \", user.updated_at), React.createElement(Link, {\n      to: `/users/${user.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Acessar\"), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"  \", React.createElement(Link, {\n      to: `/updateusers/${user.id}`,\n      title: \"Editar\",\n      className: \"btIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Imagem Editar Usuario\",\n      src: iconEdt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      title: \"Deletar\",\n      className: \"btIcon\",\n      onClick: () => {\n        this.Deleteuser({\n          id: user.id\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Imagem Deletar Usuario\",\n      src: iconDel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: page === 0,\n      onClick: this.prevPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(\"button\", {\n      disabled: UserInfo.pages === -1 || UserInfo.pages === undefined || page === UserInfo.pages,\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Pr\\xF3xima\")));\n  }\n\n}","map":{"version":3,"sources":["/home/dho/Documentos/InCo/frontend/src/pages/Admin/Usuarios/index.js"],"names":["React","Component","Link","gql","api","setLinkAtual","isAdmin","iconDel","iconEdt","iconNew","Form","Usuarios","state","Users","page","UserInfo","loadUsers","query","then","response","aux","user","data","usuarios","length","push","setState","pages","catch","e","console","log","prevPage","pageNumber","nextPage","Deleteuser","filtro","mutate","mutation","variables","id","resultado","excluirUsuario","alert","componentDidMount","render","map","nome","email","ativo","created_at","updated_at","undefined"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\"\n\nimport api from '../../../services/api';\nimport { setLinkAtual } from '../../../utils/DestacaLink'\nimport { isAdmin } from '../../../services/auth';\n\n\nimport iconDel from '../../../assets/IconDel.png';\nimport iconEdt from '../../../assets/IconEdt.png';\nimport iconNew from '../../../assets/IconNew.png';\nimport Form from '../../../componentsCSS/Form_Listagem';\n\nexport default class Usuarios extends Component {\n    // usa-se o state para poder acessar essas variaveis externamente\n    state = { //state e um objeto\n        Users: [],\n        page: 0,\n        UserInfo: {}\n    }\n\n    //componentDidMount executa assim que e criado a pagina\n    componentDidMount() { //nao clk o \"() => \", pq e uma funcao da proprio js\n        setLinkAtual('usuarios')\n        this.loadUsers();\n    }\n \n    loadUsers = async (page = 0) => {\n        await api.query({\n            query: gql`\n                query{\n                    usuarios{\n                     \tid nome email \n                        ativo created_at updated_at perfis {rotulo}\n\t                }\n                }\n            `\n        }).then(response => {\n            //Simular uma paginasao, ate eu coloca-la no backend ou retirar\n            var Users = []\n            var aux = []\n            for(let user of response.data.usuarios){\n                if(aux.length < 10){\n                    aux.push(user)\n                }else {\n                    Users.push(aux)\n                    aux = []\n                }\n            }\n            if (aux.length > 0) Users.push(aux)\n            this.setState({ Users: Users[page], UserInfo: {pages: Users.length-1}});\n        }).catch(e => {\n            console.log(e)\n        })       \n    };  \n\n    prevPage = () => {\n        const { page } = this.state;\n\n        //se esta na primeira pagina, ja retorna sem fazer nada\n        if (page === 0) return;\n\n        let pageNumber = page - 1;\n\n        this.setState({page: pageNumber})\n        \n        this.loadUsers(pageNumber);\n    }\n\n    nextPage = () => {\n        const { page, UserInfo} = this.state;\n        \n        //se esta na ultima pagina, ja retorna sem fazer nada\n        if (page === UserInfo.pages) return;\n\n        const pageNumber = page + 1;\n\n        this.setState({page: pageNumber})\n        this.loadUsers(pageNumber);//chamando a funcao de mostrar a pagina\n    }\n\n    Deleteuser = async (filtro) => {\n        if (isAdmin())  {\n            //let confirma = confirm(\"Deseja realmente apagar esse usuario?\")\n            // if (!confirma) return null\n            api.mutate({\n                mutation: gql`\n                    mutation(\n                        $id: Int\n                    ){\n                        excluirUsuario (\n                            filtro: {\n                                id: $id\n                            }\n                        ){\n                            id nome email\n                        }\n                    }\n                `,\n                variables: {\n                    id: filtro.id,\n                }\n            }).then(resultado => {\n                console.log(resultado.data.excluirUsuario)\n            }).catch(e => {\n                console.log(e)\n            })\n            const { page } = this.state\n            this.loadUsers(page)\n        }else {\n            alert('Você não tem essa permissão!');\n        }\n    }\n\n    //render sempre executa novamente, se alguma variavel do state for alterada\n    render() {\n        const { Users, page,UserInfo} = this.state; //desistruturando\n\n        //a key no h2 e passada, pq o react pede que tenha uma key unica pra cada item da iteracao\n        return  (\n            <Form onSubmit={() => {}}> \n                <div className='header'>\n                    <h1>Lista de usuarios:</h1>{/*alt='' e por questao de acessibilidade, ele fornece o que e aquela imagem, para deficientes visuais ou navegacao apenas de texto*/}\n                    <Link to={`/signupAdmin`} title='Novo Usuario' className='btIcon'><img alt='Imagem Novo Usuario' src={iconNew}/></Link>    \n                </div>\n                {//aqui codigo javascript, apos \"=> (\" volta a ser html\n                    Users.map(user => (\n                            <article key={user.id}>\n                                <strong>{user.nome}</strong>\n                                <p>{user.email}</p>\n                                <p>Ativo: {user.ativo?'Sim':'Não'}</p>\n                                <p>Criado em {user.created_at}</p>\n                                <p>Ultima atualização em {user.updated_at}</p>\n                                <Link to={`/users/${user.id}`}>Acessar</Link>\n                                <div className='buttons'>  {/*alt='' e por questao de acessibilidade, ele fornece o que e aquela imagem, para deficientes visuais ou navegacao apenas de texto*/}\n                                    <Link to={`/updateusers/${user.id}`} title='Editar' className='btIcon'><img alt='Imagem Editar Usuario' src={iconEdt}/></Link>\n                                    <button title='Deletar' className='btIcon' onClick= {() => {this.Deleteuser({id: user.id});}}><img alt='Imagem Deletar Usuario' src={iconDel}/></button>\n                                </div>\n                            </article>\n                    ))\n                }\n                <div className=\"actions\">\n                    <button disabled={page === 0} onClick={this.prevPage}>Anterior</button>\n                    <button disabled={UserInfo.pages === -1 || UserInfo.pages === undefined ||  page === UserInfo.pages} onClick={this.nextPage}>Próxima</button>\n                </div>\n            </Form>\n\n            \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dho/Documentos/InCo/frontend/src/pages/UsuariosLogados/CadastroAvaliacao/index.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport api from '../../../services/api';\nimport { getUsuarioLogado } from '../../../services/auth';\nimport { DateToInput, InputToDate } from '../../../utils/FormatDate';\nimport { setLinkAtual } from '../../../utils/DestacaLink';\nimport { Div, Container } from \"../../../componentsCSS/Form_Cadastro02\";\n\nclass CadastroAvaliacao extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ExibirCadastro: true,\n      Questionarios: [],\n      id: 0,\n      desc: '',\n      questionario_id: 0,\n      questionario: '',\n      dataInicio: '',\n      dataFim: '',\n      hoje: '',\n      chave: '',\n      error: ''\n    };\n\n    this.loadDates = () => {\n      let hoje = DateToInput(new Date());\n      let dataInicio = hoje;\n      let novaData = new Date();\n      novaData.setMonth(novaData.getMonth() + 1); //pegar um mes pra frente\n\n      let dataFim = DateToInput(novaData);\n      this.setState({\n        dataInicio,\n        dataFim,\n        hoje\n      });\n    };\n\n    this.loadQuest = async () => {\n      await api.query({\n        query: gql`\n              query{\n                listarQuestionarios { id, nome }\n              }\n          `\n      }).then(response => {\n        this.setState({\n          Questionarios: response.data.listarQuestionarios\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.handleSalvar = async e => {\n      e.preventDefault();\n      const {\n        desc,\n        dataInicio,\n        dataFim,\n        questionario_id\n      } = this.state;\n\n      if (!desc || !dataInicio || !dataFim || !questionario_id) {\n        this.setState({\n          error: 'Preencha todos os campos para continuar!'\n        });\n      } else {\n        if (questionario_id === 'selecione') {\n          this.setState({\n            error: 'Escolha um questionário!'\n          });\n        } else {\n          let usuario_id = getUsuarioLogado().id;\n\n          try {\n            api.mutate({\n              mutation: gql`\n                mutation\n                (\n                  $desc: String!\n                  $dataInicio: String!\n                  $dataFim: String!\n                  $usuario_id: Int!\n                  $questionario_id: Int!\n                )\n                {\n                  novoSchedule(\n                    dados:{\n                      desc: $desc,\n                      dataInicio: $dataInicio, \n                      dataFim: $dataFim,\n                      questionario_id: $questionario_id,\n                      usuario_id: $usuario_id\n                    }\n                  )\n                {\n                  id chave dataInicioFormatada dataFimFormatada questionario { nome } \n                }\n                }\n            `,\n              variables: {\n                desc,\n                dataInicio: InputToDate(dataInicio),\n                dataFim: InputToDate(dataFim),\n                questionario_id: parseInt(questionario_id),\n                usuario_id\n              }\n            }).then(response => {\n              let result = response.data.novoSchedule;\n              this.setState({\n                chave: result.chave,\n                id: result.id,\n                questionario: result.questionario.nome,\n                dataInicio: result.dataInicioFormatada,\n                dataFim: result.dataFimFormatada,\n                error: null,\n                ExibirCadastro: false\n              });\n            }).catch(e => {\n              console.log(e);\n              this.setState({\n                error: 'Encontramos um problema ao salvar sua avaliação, tente novamente em alguns instantes!'\n              });\n            });\n          } catch (error) {\n            console.log(error);\n            this.setState({\n              error: 'Encontramos um problema ao salvar sua avaliação, tente novamente em alguns instantes!'\n            });\n          }\n        }\n      }\n    };\n\n    this.handleVoltar = async e => {\n      e.preventDefault();\n      this.setState({\n        desc: ''\n      }); // document.getElementById('Quests').value = 'selecione';\n\n      this.loadDates();\n      this.setState({\n        ExibirCadastro: true\n      });\n    };\n  }\n\n  async componentDidMount() {\n    //nao clk o \"() => \", pq e uma funcao da proprio js\n    setLinkAtual('cadastroAvaliacao');\n    window.scrollTo(0, 70);\n    this.loadQuest();\n    this.loadDates();\n  }\n\n  render() {\n    const {\n      ExibirCadastro,\n      Questionarios,\n      questionario,\n      id,\n      desc,\n      error,\n      chave,\n      dataInicio,\n      dataFim,\n      hoje\n    } = this.state;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, !ExibirCadastro && React.createElement(Div, {\n      className: \"Div_Message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Dados da Avalia\\xE7\\xE3o:\")), React.createElement(\"form\", {\n      className: \"Formulario\",\n      onSubmit: this.handleVoltar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"messageOK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, `Cadastro realizado com sucesso: Acesse \"www.teste.com/avaliacao/${chave}\" para poder responder esse questionário!`), React.createElement(\"p\", {\n      className: \"messageOK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Veja as informa\\xE7\\xF5es da Avalia\\xE7\\xE3o:\"), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"No. Avalia\\xE7\\xE3o:\"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, id)), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Nome da Avalia\\xE7\\xE3o:\"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, desc)), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Nome do Question\\xE1rio:\"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, questionario)), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Valido de: \"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, dataInicio), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"At\\xE9: \"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, dataFim)), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Chave de acesso da avalia\\xE7\\xE3o:\"), React.createElement(\"strong\", {\n      className: \"inputTamanhoMin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, chave)), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Digitar Nova Avalia\\xE7\\xE3o\"))), ExibirCadastro && React.createElement(Div, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Cadastrar Nova Avalia\\xE7\\xE3o:\")), React.createElement(\"form\", {\n      className: \"Formulario\",\n      onSubmit: this.handleSalvar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, error && React.createElement(\"p\", {\n      className: \"erro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, error), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Identifica\\xE7\\xE3o da Avalia\\xE7\\xE3o:\"), React.createElement(\"input\", {\n      placeholder: \"D\\xEA um nome para essa avalia\\xE7\\xE3o\",\n      value: desc,\n      onChange: e => this.setState({\n        desc: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"comboBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Escolha o Question\\xE1rio:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"Quests\",\n      onChange: e => this.setState({\n        questionario_id: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"selecione\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, '<selecione>'), Questionarios.map(Quest => React.createElement(\"option\", {\n      key: Quest.id,\n      value: Quest.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, Quest.nome)))), React.createElement(\"div\", {\n      className: \"Group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Per\\xEDodo de Validade:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"DateFields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"De: \"), React.createElement(\"input\", {\n      className: \"inputTamanhoMin\",\n      type: \"date\",\n      min: hoje,\n      value: dataInicio,\n      onChange: e => this.setState({\n        dataInicio: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(React.Fragment, null, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"At\\xE9: \"), React.createElement(\"input\", {\n      className: \"inputTamanhoMin\",\n      type: \"date\",\n      min: dataInicio,\n      value: dataFim,\n      onChange: e => this.setState({\n        dataFim: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })))), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Salvar\"))));\n  }\n\n}\n\nexport default withRouter(CadastroAvaliacao);","map":{"version":3,"sources":["/home/dho/Documentos/InCo/frontend/src/pages/UsuariosLogados/CadastroAvaliacao/index.js"],"names":["React","Component","withRouter","gql","api","getUsuarioLogado","DateToInput","InputToDate","setLinkAtual","Div","Container","CadastroAvaliacao","state","ExibirCadastro","Questionarios","id","desc","questionario_id","questionario","dataInicio","dataFim","hoje","chave","error","loadDates","Date","novaData","setMonth","getMonth","setState","loadQuest","query","then","response","data","listarQuestionarios","catch","e","console","log","handleSalvar","preventDefault","usuario_id","mutate","mutation","variables","parseInt","result","novoSchedule","nome","dataInicioFormatada","dataFimFormatada","handleVoltar","componentDidMount","window","scrollTo","render","target","value","map","Quest"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAAQC,gBAAR,QAA+B,wBAA/B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,2BAAzC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,SAASC,GAAT,EAAcC,SAAd,QAA+B,wCAA/B;;AAEA,MAAMC,iBAAN,SAAgCV,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCW,KADwC,GAChC;AACNC,MAAAA,cAAc,EAAE,IADV;AAENC,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,EAAE,EAAE,CAHE;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,eAAe,EAAE,CALX;AAMNC,MAAAA,YAAY,EAAE,EANR;AAONC,MAAAA,UAAU,EAAE,EAPN;AAQNC,MAAAA,OAAO,EAAE,EARH;AASNC,MAAAA,IAAI,EAAE,EATA;AAUNC,MAAAA,KAAK,EAAE,EAVD;AAWNC,MAAAA,KAAK,EAAE;AAXD,KADgC;;AAAA,SAsBxCC,SAtBwC,GAsB5B,MAAM;AACd,UAAIH,IAAI,GAAGf,WAAW,CAAC,IAAImB,IAAJ,EAAD,CAAtB;AACA,UAAIN,UAAU,GAAGE,IAAjB;AACA,UAAIK,QAAQ,GAAG,IAAID,IAAJ,EAAf;AACAC,MAAAA,QAAQ,CAACC,QAAT,CAAkBD,QAAQ,CAACE,QAAT,KAAoB,CAAtC,EAJc,CAI0B;;AACxC,UAAIR,OAAO,GAAGd,WAAW,CAACoB,QAAD,CAAzB;AAEA,WAAKG,QAAL,CAAc;AAACV,QAAAA,UAAD;AAAaC,QAAAA,OAAb;AAAsBC,QAAAA;AAAtB,OAAd;AACH,KA9BuC;;AAAA,SAgCxCS,SAhCwC,GAgC5B,YAAY;AACpB,YAAM1B,GAAG,CAAC2B,KAAJ,CAAU;AACZA,QAAAA,KAAK,EAAE5B,GAAI;;;;;AADC,OAAV,EAMH6B,IANG,CAMEC,QAAQ,IAAI;AAChB,aAAKJ,QAAL,CAAc;AAAEf,UAAAA,aAAa,EAAEmB,QAAQ,CAACC,IAAT,CAAcC;AAA/B,SAAd;AACH,OARK,EAQHC,KARG,CAQGC,CAAC,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,OAVK,CAAN;AAWH,KA5CuC;;AAAA,SA8CxCG,YA9CwC,GA8CzB,MAAMH,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACI,cAAF;AAEA,YAAM;AAACzB,QAAAA,IAAD;AAAOG,QAAAA,UAAP;AAAmBC,QAAAA,OAAnB;AAA4BH,QAAAA;AAA5B,UAA+C,KAAKL,KAA1D;;AAEA,UAAG,CAACI,IAAD,IAAS,CAACG,UAAV,IAAwB,CAACC,OAAzB,IAAoC,CAACH,eAAxC,EAAwD;AACtD,aAAKY,QAAL,CAAc;AAACN,UAAAA,KAAK,EAAE;AAAR,SAAd;AACD,OAFD,MAEK;AACH,YAAGN,eAAe,KAAK,WAAvB,EAAmC;AACjC,eAAKY,QAAL,CAAc;AAACN,YAAAA,KAAK,EAAE;AAAR,WAAd;AACD,SAFD,MAEM;AACF,cAAImB,UAAU,GAAGrC,gBAAgB,GAAGU,EAApC;;AACA,cAAI;AACFX,YAAAA,GAAG,CAACuC,MAAJ,CAAW;AACTC,cAAAA,QAAQ,EAAEzC,GAAI;;;;;;;;;;;;;;;;;;;;;;;aADL;AAyBX0C,cAAAA,SAAS,EAAE;AACT7B,gBAAAA,IADS;AAETG,gBAAAA,UAAU,EAAEZ,WAAW,CAACY,UAAD,CAFd;AAGTC,gBAAAA,OAAO,EAAEb,WAAW,CAACa,OAAD,CAHX;AAITH,gBAAAA,eAAe,EAAE6B,QAAQ,CAAC7B,eAAD,CAJhB;AAKTyB,gBAAAA;AALS;AAzBA,aAAX,EAgCGV,IAhCH,CAgCQC,QAAQ,IAAI;AAClB,kBAAIc,MAAM,GAAGd,QAAQ,CAACC,IAAT,CAAcc,YAA3B;AAEA,mBAAKnB,QAAL,CAAc;AACEP,gBAAAA,KAAK,EAAEyB,MAAM,CAACzB,KADhB;AAEEP,gBAAAA,EAAE,EAAEgC,MAAM,CAAChC,EAFb;AAGEG,gBAAAA,YAAY,EAAE6B,MAAM,CAAC7B,YAAP,CAAoB+B,IAHpC;AAIE9B,gBAAAA,UAAU,EAAE4B,MAAM,CAACG,mBAJrB;AAKE9B,gBAAAA,OAAO,EAAE2B,MAAM,CAACI,gBALlB;AAME5B,gBAAAA,KAAK,EAAE,IANT;AAOEV,gBAAAA,cAAc,EAAE;AAPlB,eAAd;AASD,aA5CD,EA4CGuB,KA5CH,CA4CSC,CAAC,IAAI;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,mBAAKR,QAAL,CAAc;AAACN,gBAAAA,KAAK,EAAE;AAAR,eAAd;AACD,aA/CD;AAgDD,WAjDD,CAiDE,OAAOA,KAAP,EAAc;AACde,YAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACA,iBAAKM,QAAL,CAAc;AAACN,cAAAA,KAAK,EAAE;AAAR,aAAd;AACD;AACJ;AACF;AAEF,KAlHuC;;AAAA,SAoHxC6B,YApHwC,GAoHzB,MAAMf,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACI,cAAF;AAEA,WAAKZ,QAAL,CAAc;AAACb,QAAAA,IAAI,EAAC;AAAN,OAAd,EAHwB,CAIxB;;AACA,WAAKQ,SAAL;AACA,WAAKK,QAAL,CAAc;AAAChB,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD,KA3HuC;AAAA;;AAexC,QAAMwC,iBAAN,GAA0B;AAAE;AACxB7C,IAAAA,YAAY,CAAC,mBAAD,CAAZ;AACA8C,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,EAAlB;AACA,SAAKzB,SAAL;AACA,SAAKN,SAAL;AACH;;AAyGAgC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAE3C,MAAAA,cAAF;AAAkBC,MAAAA,aAAlB;AAAiCI,MAAAA,YAAjC;AACEH,MAAAA,EADF;AACMC,MAAAA,IADN;AACYO,MAAAA,KADZ;AACmBD,MAAAA,KADnB;AAC0BH,MAAAA,UAD1B;AAEEC,MAAAA,OAFF;AAEWC,MAAAA;AAFX,QAEoB,KAAKT,KAF/B;AAGA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACC,cAAD,IACC,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADF,EAIE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAE,KAAKuC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,mEAAkE9B,KAAM,2CAAnG,CADF,EAEE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFF,EAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASP,EAAT,CAFF,CAHF,EAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASC,IAAT,CAFF,CAPF,EAWE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASE,YAAT,CAFF,CAXF,EAeE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASC,UAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASC,OAAT,CAJF,CAfF,EAqBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,EAEE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCE,KAArC,CAFF,CArBF,EAyBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAzBF,CAJF,CAFJ,EAmCGT,cAAc,IACb,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,CADF,EAIE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAE,KAAK2B,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjB,KAAK,IAAI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBA,KAArB,CADZ,EAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,EAEE;AACE,MAAA,WAAW,EAAC,yCADd;AAEE,MAAA,KAAK,EAAEP,IAFT;AAGE,MAAA,QAAQ,EAAEqB,CAAC,IAAI,KAAKR,QAAL,CAAc;AAAEb,QAAAA,IAAI,EAAEqB,CAAC,CAACoB,MAAF,CAASC;AAAjB,OAAd,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAUE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1C,EAEE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,QAAQ,EAAErB,CAAC,IAAI,KAAKR,QAAL,CAAc;AAAEZ,QAAAA,eAAe,EAAEoB,CAAC,CAACoB,MAAF,CAASC;AAA5B,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,aAA3B,CAJF,EAMI5C,aAAa,CAAC6C,GAAd,CAAmBC,KAAK,IACtB;AAAQ,MAAA,GAAG,EAAEA,KAAK,CAAC7C,EAAnB;AAAuB,MAAA,KAAK,EAAE6C,KAAK,CAAC7C,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC6C,KAAK,CAACX,IAA/C,CADF,CANJ,CAFF,CAVF,EAwBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADvC,EAC4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5C,EAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAE5B,IAHP;AAIE,MAAA,KAAK,EAAEF,UAJT;AAKE,MAAA,QAAQ,EAAEkB,CAAC,IAAI,KAAKR,QAAL,CAAc;AAAEV,QAAAA,UAAU,EAAEkB,CAAC,CAACoB,MAAF,CAASC;AAAvB,OAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAWE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAEvC,UAHP;AAIE,MAAA,KAAK,EAAEC,OAJT;AAKE,MAAA,QAAQ,EAAEiB,CAAC,IAAI,KAAKR,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAEiB,CAAC,CAACoB,MAAF,CAASC;AAApB,OAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,CAFF,CAxBF,EAiDE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjDF,CAJF,CApCJ,CADF;AAiGD;;AAlOuC;;AAqO1C,eAAexD,UAAU,CAACS,iBAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport gql from \"graphql-tag\"\n\nimport api from '../../../services/api'\nimport {getUsuarioLogado} from '../../../services/auth'\n\nimport { DateToInput, InputToDate } from '../../../utils/FormatDate'\nimport { setLinkAtual } from '../../../utils/DestacaLink'\n\nimport { Div, Container } from \"../../../componentsCSS/Form_Cadastro02\";\n\nclass CadastroAvaliacao extends Component {\n  state = {\n    ExibirCadastro: true,\n    Questionarios: [],\n    id: 0,\n    desc: '',\n    questionario_id: 0,\n    questionario: '',\n    dataInicio: '',\n    dataFim: '',\n    hoje: '',\n    chave: '',\n    error: ''\n  }\n\n  async componentDidMount() { //nao clk o \"() => \", pq e uma funcao da proprio js\n      setLinkAtual('cadastroAvaliacao')\n      window.scrollTo(0,70)\n      this.loadQuest()\n      this.loadDates()\n  }\n\n  loadDates = () => {\n      let hoje = DateToInput(new Date())\n      let dataInicio = hoje\n      let novaData = new Date()\n      novaData.setMonth(novaData.getMonth()+1)//pegar um mes pra frente\n      let dataFim = DateToInput(novaData)\n      \n      this.setState({dataInicio, dataFim, hoje})\n  }\n\n  loadQuest = async () => {\n      await api.query({\n          query: gql`\n              query{\n                listarQuestionarios { id, nome }\n              }\n          `,\n      }).then(response => {\n          this.setState({ Questionarios: response.data.listarQuestionarios });\n      }).catch(e => {\n          console.log(e)\n      })       \n  };\n\n  handleSalvar = async e => {\n    e.preventDefault();\n\n    const {desc, dataInicio, dataFim, questionario_id} = this.state\n\n    if(!desc || !dataInicio || !dataFim || !questionario_id){\n      this.setState({error: 'Preencha todos os campos para continuar!'})\n    }else{\n      if(questionario_id === 'selecione'){\n        this.setState({error: 'Escolha um questionário!'})\n      } else{\n          let usuario_id = getUsuarioLogado().id\n          try {\n            api.mutate({\n              mutation: gql`\n                mutation\n                (\n                  $desc: String!\n                  $dataInicio: String!\n                  $dataFim: String!\n                  $usuario_id: Int!\n                  $questionario_id: Int!\n                )\n                {\n                  novoSchedule(\n                    dados:{\n                      desc: $desc,\n                      dataInicio: $dataInicio, \n                      dataFim: $dataFim,\n                      questionario_id: $questionario_id,\n                      usuario_id: $usuario_id\n                    }\n                  )\n                {\n                  id chave dataInicioFormatada dataFimFormatada questionario { nome } \n                }\n                }\n            `,\n            variables: {\n              desc,\n              dataInicio: InputToDate(dataInicio),\n              dataFim: InputToDate(dataFim),\n              questionario_id: parseInt(questionario_id),\n              usuario_id\n            }\n            }).then(response => {\n              let result = response.data.novoSchedule\n\n              this.setState({\n                              chave: result.chave, \n                              id: result.id,\n                              questionario: result.questionario.nome,\n                              dataInicio: result.dataInicioFormatada,\n                              dataFim: result.dataFimFormatada,\n                              error: null, \n                              ExibirCadastro: false\n                          })\n            }).catch(e => {\n              console.log(e)\n              this.setState({error: 'Encontramos um problema ao salvar sua avaliação, tente novamente em alguns instantes!'})\n            })\n          } catch (error) {\n            console.log(error)\n            this.setState({error: 'Encontramos um problema ao salvar sua avaliação, tente novamente em alguns instantes!'})\n          }\n      }\n    }\n    \n  }\n  \n  handleVoltar = async e => {\n    e.preventDefault();\n\n    this.setState({desc:''})\n    // document.getElementById('Quests').value = 'selecione';\n    this.loadDates()\n    this.setState({ExibirCadastro: true})\n  }\n\n   render() {\n    const { ExibirCadastro, Questionarios, questionario, \n            id, desc, error, chave, dataInicio, \n            dataFim, hoje } = this.state\n    return (\n      <Container>\n        {!ExibirCadastro &&\n          <Div className='Div_Message'>\n            <header>\n              <h3>Dados da Avaliação:</h3>\n            </header>\n            <form className='Formulario' onSubmit={this.handleVoltar}>\n              <p className='messageOK'>{`Cadastro realizado com sucesso: Acesse \"www.teste.com/avaliacao/${chave}\" para poder responder esse questionário!`}</p>\n              <p className='messageOK'>Veja as informações da Avaliação:</p>\n              <div className=\"Group\">\n                <strong>No. Avaliação:</strong>\n                <strong>{id}</strong>\n              </div>\n              <div className=\"Group\">\n                <strong>Nome da Avaliação:</strong>\n                <strong>{desc}</strong>\n              </div>\n              <div className=\"Group\">\n                <strong>Nome do Questionário:</strong>\n                <strong>{questionario}</strong>\n              </div>\n              <div className=\"Group\">\n                <strong>Valido de: </strong>\n                <strong>{dataInicio}</strong>\n                <strong>Até: </strong>\n                <strong>{dataFim}</strong>\n              </div>\n              <div className=\"Group\">\n                <strong>Chave de acesso da avaliação:</strong>\n                <strong className='inputTamanhoMin'>{chave}</strong>\n              </div>\n              <button type='submit'>Digitar Nova Avaliação</button>\n            </form>\n          </Div>\n        }\n        {ExibirCadastro &&\n          <Div>\n            <header>\n              <h3>Cadastrar Nova Avaliação:</h3>\n            </header>\n            <form className='Formulario' onSubmit={this.handleSalvar}>\n              {error && <p className='erro'>{error}</p>}\n              <div className=\"Group\">\n                <strong>Identificação da Avaliação:</strong>\n                <input \n                  placeholder='Dê um nome para essa avaliação'\n                  value={desc}\n                  onChange={e => this.setState({ desc: e.target.value })}\n                ></input>\n              </div>\n              <div className=\"comboBox\">\n                <strong>Escolha o Questionário:</strong><br/>\n                <select \n                  id='Quests'\n                  onChange={e => this.setState({ questionario_id: e.target.value })}\n                >\n                  <option value='selecione'>{'<selecione>'}</option>\n                  {\n                    Questionarios.map( Quest => (\n                      <option key={Quest.id} value={Quest.id}>{Quest.nome}</option>\n                    ))\n                  } \n                </select>\n              </div>\n              <div className=\"Group\">\n                <strong>Período de Validade:</strong><br/><br/>\n                <div className='DateFields'>\n                  <>\n                    <strong>De: </strong>\n                    <input \n                      className='inputTamanhoMin' \n                      type='date'\n                      min={hoje}\n                      value={dataInicio}\n                      onChange={e => this.setState({ dataInicio: e.target.value })}\n                    ></input>\n                  </>\n                  <>\n                    <strong>Até: </strong>\n                    <input\n                      className='inputTamanhoMin' \n                      type='date'\n                      min={dataInicio}\n                      value={dataFim}\n                      onChange={e => this.setState({ dataFim: e.target.value })}\n                    ></input>\n                  </>\n                </div>\n              </div>\n              <button type='submit'>Salvar</button>\n              \n            </form>\n          </Div>\n        }\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(CadastroAvaliacao);"]},"metadata":{},"sourceType":"module"}
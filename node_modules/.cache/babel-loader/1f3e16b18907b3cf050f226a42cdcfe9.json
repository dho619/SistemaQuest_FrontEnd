{"ast":null,"code":"var _jsxFileName = \"/home/dho/Documentos/InCo/frontend/src/pages/Admin/Perfis/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport api from '../../../services/api';\nimport { isAdmin } from '../../../services/auth';\nimport { setLinkAtual } from '../../../utils/DestacaLink';\nimport iconDel from '../../../assets/IconDel.png';\nimport iconEdt from '../../../assets/IconEdt.png';\nimport iconNew from '../../../assets/IconNew.png';\nimport Form from '../../../componentsCSS/Form_Listagem';\nexport default class Perfis extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //state e um objeto\n      Perfis: [],\n      page: 0,\n      PerfilInfo: {}\n    };\n\n    this.loadPerfis = async (page = 0) => {\n      await api.query({\n        query: gql`\n                query{\n                    perfis{\n                     \tid nome rotulo \n\t                }\n                }\n            `\n      }).then(response => {\n        //Simular uma paginasao, ate eu coloca-la no backend ou retirar\n        var Perfis = [];\n        var aux = [];\n\n        for (let Perfil of response.data.perfis) {\n          if (aux.length < 10) {\n            aux.push(Perfil);\n          } else {\n            Perfis.push(aux);\n            aux = [];\n          }\n        }\n\n        if (aux.length > 0) Perfis.push(aux);\n        this.setState({\n          Perfis: Perfis[page],\n          PerfilInfo: {\n            pages: Perfis.length - 1\n          }\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.prevPage = () => {\n      const {\n        page\n      } = this.state; //se esta na primeira pagina, ja retorna sem fazer nada\n\n      if (page === 0) return;\n      let pageNumber = page - 1;\n      this.setState({\n        page: pageNumber\n      });\n      this.loadPerfis(pageNumber);\n    };\n\n    this.nextPage = () => {\n      const {\n        page,\n        PerfilInfo\n      } = this.state; //se esta na ultima pagina, ja retorna sem fazer nada\n\n      if (page === PerfilInfo.pages) return;\n      const pageNumber = page + 1;\n      this.setState({\n        page: pageNumber\n      });\n      this.loadPerfis(pageNumber); //chamando a funcao de mostrar a pagina\n    };\n\n    this.DeletePerfil = async filtro => {\n      if (isAdmin()) {\n        //let confirma = confirm(\"Deseja realmente apagar esse usuario?\")\n        // if (!confirma) return null\n        api.mutate({\n          mutation: gql`\n                    mutation(\n                        $id: Int\n                    ){\n                        excluirPerfil (\n                            filtro: {\n                                id: $id\n                            }\n                        ){\n                            id nome rotulo\n                        }\n                    }\n                `,\n          variables: {\n            id: filtro.id\n          }\n        }).then(resultado => {\n          console.log(resultado.data.excluirPerfil);\n        }).catch(e => {\n          console.log(e);\n        });\n        const {\n          page\n        } = this.state;\n        this.loadPerfis(page);\n      } else {\n        alert('Você não tem essa permissão!');\n      }\n    };\n  }\n\n  //componentDidMount executa assim que e criado a pagina\n  componentDidMount() {\n    //nao clk o \"() => \", pq e uma funcao da proprio js\n    this.loadPerfis();\n    setLinkAtual('perfis');\n  }\n\n  //render sempre executa novamente, se alguma variavel do state for alterada\n  render() {\n    const {\n      Perfis,\n      page,\n      PerfilInfo\n    } = this.state; //desistruturando\n    //a key no h2 e passada, pq o react pede que tenha uma key unica pra cada item da iteracao\n\n    return React.createElement(Form, {\n      onSubmit: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Lista de perfis:\"), React.createElement(Link, {\n      to: `/RegisterProfile`,\n      title: \"Novo Perfis\",\n      className: \"btIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Imagem Novo Perfis\",\n      src: iconNew,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))), //aqui codigo javascript, apos \"=> (\" volta a ser html\n    Perfis.map(Perfil => React.createElement(\"article\", {\n      key: Perfil.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"ID: \", Perfil.id), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Nome: \", Perfil.nome), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Rotulo: \", Perfil.rotulo), React.createElement(Link, {\n      to: `/Perfis/${Perfil.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Acessar\"), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"  \", React.createElement(Link, {\n      to: `/updatePerfis/${Perfil.id}`,\n      title: \"Editar\",\n      className: \"btIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Imagem Editar Perfis\",\n      src: iconEdt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      title: \"Deletar\",\n      className: \"btIcon\",\n      onClick: () => {\n        this.DeletePerfil({\n          id: Perfil.id\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Imagem Deletar Perfis\",\n      src: iconDel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: page === 0,\n      onClick: this.prevPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(\"button\", {\n      disabled: PerfilInfo.pages === -1 || PerfilInfo.pages === undefined || page === PerfilInfo.pages,\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Pr\\xF3xima\")));\n  }\n\n}","map":{"version":3,"sources":["/home/dho/Documentos/InCo/frontend/src/pages/Admin/Perfis/index.js"],"names":["React","Component","Link","gql","api","isAdmin","setLinkAtual","iconDel","iconEdt","iconNew","Form","Perfis","state","page","PerfilInfo","loadPerfis","query","then","response","aux","Perfil","data","perfis","length","push","setState","pages","catch","e","console","log","prevPage","pageNumber","nextPage","DeletePerfil","filtro","mutate","mutation","variables","id","resultado","excluirPerfil","alert","componentDidMount","render","map","nome","rotulo","undefined"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\"\n\nimport api from '../../../services/api';\nimport { isAdmin } from '../../../services/auth';\nimport { setLinkAtual } from '../../../utils/DestacaLink'\n\nimport iconDel from '../../../assets/IconDel.png';\nimport iconEdt from '../../../assets/IconEdt.png';\nimport iconNew from '../../../assets/IconNew.png';\nimport Form from '../../../componentsCSS/Form_Listagem';\n\nexport default class Perfis extends Component {\n    // usa-se o state para poder acessar essas variaveis externamente\n    state = { //state e um objeto\n        Perfis: [],\n        page: 0,\n        PerfilInfo: {}\n    }\n\n    //componentDidMount executa assim que e criado a pagina\n    componentDidMount() { //nao clk o \"() => \", pq e uma funcao da proprio js\n        this.loadPerfis();\n        setLinkAtual('perfis')\n    }\n \n    loadPerfis = async (page = 0) => {\n        await api.query({\n            query: gql`\n                query{\n                    perfis{\n                     \tid nome rotulo \n\t                }\n                }\n            `\n        }).then(response => {\n            //Simular uma paginasao, ate eu coloca-la no backend ou retirar\n            var Perfis = []\n            var aux = []\n            for(let Perfil of response.data.perfis){\n                if(aux.length < 10){\n                    aux.push(Perfil)\n                }else {\n                    Perfis.push(aux)\n                    aux = []\n                }\n            }\n            if (aux.length > 0) Perfis.push(aux)\n            this.setState({ Perfis: Perfis[page], PerfilInfo: {pages: Perfis.length-1}});\n        }).catch(e => {\n            console.log(e)\n        })       \n    };  \n\n    prevPage = () => {\n        const { page } = this.state;\n\n        //se esta na primeira pagina, ja retorna sem fazer nada\n        if (page === 0) return;\n\n        let pageNumber = page - 1;\n\n        this.setState({page: pageNumber})\n        \n        this.loadPerfis(pageNumber);\n    }\n\n    nextPage = () => {\n        const { page, PerfilInfo} = this.state;\n        \n        //se esta na ultima pagina, ja retorna sem fazer nada\n        if (page === PerfilInfo.pages) return;\n\n        const pageNumber = page + 1;\n\n        this.setState({page: pageNumber})\n        this.loadPerfis(pageNumber);//chamando a funcao de mostrar a pagina\n    }\n\n    DeletePerfil = async (filtro) => {\n        if (isAdmin())  {\n            //let confirma = confirm(\"Deseja realmente apagar esse usuario?\")\n            // if (!confirma) return null\n            api.mutate({\n                mutation: gql`\n                    mutation(\n                        $id: Int\n                    ){\n                        excluirPerfil (\n                            filtro: {\n                                id: $id\n                            }\n                        ){\n                            id nome rotulo\n                        }\n                    }\n                `,\n                variables: {\n                    id: filtro.id,\n                }\n            }).then(resultado => {\n                console.log(resultado.data.excluirPerfil)\n            }).catch(e => {\n                console.log(e)\n            })\n            const { page } = this.state\n            this.loadPerfis(page)\n        }else {\n            alert('Você não tem essa permissão!');\n        }\n    }\n\n    //render sempre executa novamente, se alguma variavel do state for alterada\n    render() {\n        const { Perfis, page, PerfilInfo} = this.state; //desistruturando\n\n        //a key no h2 e passada, pq o react pede que tenha uma key unica pra cada item da iteracao\n        return  (\n            <Form onSubmit={() => {}}> \n                <div className='header'>\n                    <h1>Lista de perfis:</h1>{/*alt='' e por questao de acessibilidade, ele fornece o que e aquela imagem, para deficientes visuais ou navegacao apenas de texto*/}\n                    <Link to={`/RegisterProfile`} title='Novo Perfis' className='btIcon'><img alt='Imagem Novo Perfis' src={iconNew}/></Link>    \n                </div>\n                {//aqui codigo javascript, apos \"=> (\" volta a ser html\n                    Perfis.map(Perfil => (\n                            <article key={Perfil.id}>\n                                <strong>ID: {Perfil.id}</strong>\n                                <br/>\n                                <strong>Nome: {Perfil.nome}</strong>\n                                <br/>\n                                <strong>Rotulo: {Perfil.rotulo}</strong>\n                                <Link to={`/Perfis/${Perfil.id}`}>Acessar</Link>\n                                <div className='buttons'>  {/*alt='' e por questao de acessibilidade, ele fornece o que e aquela imagem, para deficientes visuais ou navegacao apenas de texto*/}\n                                    <Link to={`/updatePerfis/${Perfil.id}`} title='Editar' className='btIcon'><img alt='Imagem Editar Perfis' src={iconEdt}/></Link>\n                                    <button title='Deletar' className='btIcon' onClick= {() => {this.DeletePerfil({id: Perfil.id});}}><img alt='Imagem Deletar Perfis' src={iconDel}/></button>\n                                </div>\n                            </article>\n                    ))\n                }\n                <div className=\"actions\">\n                    <button disabled={page === 0} onClick={this.prevPage}>Anterior</button>\n                    <button disabled={PerfilInfo.pages === -1 || PerfilInfo.pages === undefined || page === PerfilInfo.pages} onClick={this.nextPage}>Próxima</button>\n                </div>\n            </Form>\n\n            \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dho/Documentos/InCo/frontend/src/pages/UsuariosLogados/Avaliacoes/index.js\";\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport api from '../../../services/api';\nimport { getUsuarioLogado } from '../../../services/auth';\nimport { setLinkAtual } from '../../../utils/DestacaLink';\nimport { criptografar } from '../../../utils/criptografia';\nimport MyGrid from \"../../../components/Grid\";\nimport { Div } from \"../../../componentsCSS/Exibir_Grid\";\nexport default class Avaliacoes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      avaliacoes: []\n    };\n\n    this.loadAvaliacoes = async () => {\n      const {\n        id\n      } = await getUsuarioLogado();\n      api.query({\n        query: gql`\n            query(\n              $id: Int\n            ){\n                schedulesUsuario(filtro: {id: $id}){\n                    id desc chave dataInicio dataFim\n                    dataInicioFormatada dataFimFormatada \n                    questionario { nome }\n                }\n            }\n          `,\n        variables: {\n          id\n        }\n      }).then(response => {\n        let avaliacoes = response.data.schedulesUsuario; //para facilitar na hora de passar para a grid\n\n        avaliacoes.map(a => a.questionario = a.questionario.nome);\n        this.setState({\n          avaliacoes\n        });\n      }).catch(e => console.log(e));\n    };\n\n    this.HANDLE_ROW_DOUBLE_CLICK = row => {\n      console.log(row);\n      let obj = {\n        CH: row.chave,\n        PI: '1V2XS'\n      };\n      window.location.href = `/PesquisadosAval/${criptografar(obj)}`;\n    };\n  }\n\n  //componentDidMount executa assim que e criado a pagina\n  async componentDidMount() {\n    setLinkAtual('avaliacoes');\n    this.loadAvaliacoes();\n  }\n\n  render() {\n    const columns = [{\n      id: 'chave',\n      label: 'Chave',\n      minWidth: 170\n    }, {\n      id: 'desc',\n      label: 'Descrição',\n      minWidth: 170\n    }, {\n      id: 'questionario',\n      label: 'Questionario',\n      minWidth: 170\n    }, {\n      id: 'dataInicioFormatada',\n      label: 'Data Inicio',\n      minWidth: 170,\n      align: 'right'\n    }, {\n      id: 'dataFimFormatada',\n      label: 'Data Fim',\n      minWidth: 170,\n      align: 'right'\n    }];\n    const {\n      avaliacoes\n    } = this.state;\n    return React.createElement(Div, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Suas Avalia\\xE7\\xF5es: \")), React.createElement(MyGrid, {\n      orderColumn: \"dataInicioFormatada\",\n      order: \"asc\" // ou desc\n      ,\n      columns: columns,\n      rows: avaliacoes,\n      onDoubleClick: this.HANDLE_ROW_DOUBLE_CLICK,\n      onTouchEnd: this.HANDLE_ROW_DOUBLE_CLICK,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/dho/Documentos/InCo/frontend/src/pages/UsuariosLogados/Avaliacoes/index.js"],"names":["React","Component","gql","api","getUsuarioLogado","setLinkAtual","criptografar","MyGrid","Div","Avaliacoes","state","avaliacoes","loadAvaliacoes","id","query","variables","then","response","data","schedulesUsuario","map","a","questionario","nome","setState","catch","e","console","log","HANDLE_ROW_DOUBLE_CLICK","row","obj","CH","chave","PI","window","location","href","componentDidMount","render","columns","label","minWidth","align"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport gql from \"graphql-tag\"\n\nimport api from '../../../services/api';\nimport { getUsuarioLogado } from '../../../services/auth';\nimport { setLinkAtual } from '../../../utils/DestacaLink'\nimport { criptografar } from '../../../utils/criptografia'\nimport MyGrid from \"../../../components/Grid\";\nimport { Div } from \"../../../componentsCSS/Exibir_Grid\";\n\nexport default class Avaliacoes extends Component {\n    state = { \n        avaliacoes: [],\n    }\n\n    //componentDidMount executa assim que e criado a pagina\n    async componentDidMount() { \n        setLinkAtual('avaliacoes')\n        this.loadAvaliacoes()\n    }\n\n    loadAvaliacoes = async () => {\n        const { id } = await getUsuarioLogado()\n        api.query({\n          query: gql`\n            query(\n              $id: Int\n            ){\n                schedulesUsuario(filtro: {id: $id}){\n                    id desc chave dataInicio dataFim\n                    dataInicioFormatada dataFimFormatada \n                    questionario { nome }\n                }\n            }\n          `,\n          variables: {\n            id,\n          }\n        }).then(response => {\n          let avaliacoes = response.data.schedulesUsuario\n          //para facilitar na hora de passar para a grid\n          avaliacoes.map(a => a.questionario = a.questionario.nome)\n          this.setState({avaliacoes})\n        }).catch(e => console.log(e))\n    }\n\n    HANDLE_ROW_DOUBLE_CLICK = (row) => {\n        console.log(row)\n        let obj={CH:row.chave,PI:'1V2XS'}\n        window.location.href= `/PesquisadosAval/${criptografar(obj)}`;\n    }\n\n    render() {\n        const columns = [\n            { id: 'chave',          label: 'Chave',         minWidth: 170 },\n            { id: 'desc',           label: 'Descrição',     minWidth: 170 },\n            { id: 'questionario',   label: 'Questionario',  minWidth: 170 },\n            { id: 'dataInicioFormatada',   label: 'Data Inicio',  minWidth: 170, align: 'right' },\n            { id: 'dataFimFormatada',   label: 'Data Fim',  minWidth: 170,  align: 'right'},\n        ]\n        const {avaliacoes} = this.state\n        return (\n            <Div>\n                <header>\n                    <h1>Suas Avaliações: </h1>\n                </header>\n                <MyGrid\n                    orderColumn = 'dataInicioFormatada'\n                    order = 'asc'// ou desc\n                    columns={columns}\n                    rows={avaliacoes}\n                    onDoubleClick={this.HANDLE_ROW_DOUBLE_CLICK}\n                    onTouchEnd={this.HANDLE_ROW_DOUBLE_CLICK}\n                />\n            </Div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}
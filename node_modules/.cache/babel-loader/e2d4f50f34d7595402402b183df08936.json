{"ast":null,"code":"var _jsxFileName = \"/home/dho/Documentos/InCo/frontend/src/pages/Admin/SignUpAdmin/index.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport gql from \"graphql-tag\"; //Imports de outros arquivos\n\nimport api from \"../../../services/api\";\nimport { setLinkAtual } from '../../../utils/DestacaLink';\nimport Logo from \"../../../assets/Logo.png\"; //CSS\n\nimport { Label } from \"./styles\";\nimport { Form, Container } from \"../../../componentsCSS/Form_Cadastro01\";\n\nclass SignupAdmin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nome: \"\",\n      telefone: \"\",\n      email: \"\",\n      senha: \"\",\n      senha2: \"\",\n      perfis: [],\n      perfil: \"\",\n      menssage: null\n    };\n\n    this.carregaPerfis = async () => {\n      await api.query({\n        query: gql`{perfis { id nome rotulo }}`\n      }).then(resultado => {\n        this.setState({\n          perfis: resultado.data.perfis\n        });\n        this.erros = null;\n      }).catch(e => {\n        this.erros = e;\n      });\n    };\n\n    this.handleSignUp = async e => {\n      e.preventDefault();\n      const {\n        nome,\n        telefone,\n        email,\n        senha,\n        senha2,\n        perfil\n      } = this.state;\n\n      if (!nome || !telefone || !email || !senha || !senha2 || !perfil || perfil === 'selecione') {\n        this.setState({\n          menssage: \"Preencha todos os dados para se cadastrar\"\n        });\n      } else if (senha !== senha2) {\n        this.setState({\n          menssage: \"O campo de senha e confirmar senha, estão diferentes!\"\n        });\n      } else {\n        try {\n          const perfis = [{\n            nome: perfil\n          }]; //como o frontend por ora so aceita um perfil...\n\n          api.mutate({\n            mutation: gql`\n            mutation\n            (\n              $nome: String!\n              $email: String!\n              $telefone: String!\n              $senha: String!\n              $perfis: [PerfilFiltro]\n            )\n            {\n              novoUsuario(\n                dados:{\n                  nome: $nome,\n                  telefone: $telefone,\n                  email: $email, \n                  senha: $senha,\n                  perfis: $perfis\n                }\n              )\n            {\n              id nome email telefone\n              ativo created_at updated_at\n              perfis { rotulo }\n            }\n            }\n        `,\n            variables: {\n              nome,\n              email,\n              telefone,\n              senha,\n              perfis\n            }\n          }).then(resultado => {\n            console.log(resultado.data.novoUsuario);\n            this.setState({\n              nome: '',\n              telefone: '',\n              email: '',\n              senha: '',\n              senha2: ''\n            });\n            this.setState({\n              menssage: 'Usuario Cadastrado com sucesso!'\n            });\n          }).catch(e => {\n            console.log(e);\n            this.setState({\n              menssage: 'Email Já Cadastrado!'\n            });\n          });\n        } catch (e) {\n          console.log(e);\n          this.setState({\n            menssage: \"Ocorreu um erro ao registrar o novo usuario. T.T\"\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    //nao clk o \"() => \", pq e uma funcao da proprio js\n    setLinkAtual('signupAdmin');\n    this.carregaPerfis();\n  }\n\n  render() {\n    const {\n      perfis,\n      nome,\n      email,\n      telefone,\n      senha,\n      senha2\n    } = this.state;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Logo,\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), this.state.menssage && React.createElement(\"p\", {\n      className: \"erro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.menssage), React.createElement(\"input\", {\n      type: \"text\",\n      value: nome,\n      placeholder: \"Nome Completo\",\n      onChange: e => this.setState({\n        nome: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"tel\",\n      value: telefone,\n      placeholder: \"Telefone ex: 35 99999-8888\",\n      title: \"Formato: 35 99999-8888\",\n      pattern: \"^\\\\d{2} \\\\d{4,5}-\\\\d{4}$\",\n      onChange: e => this.setState({\n        telefone: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      value: email,\n      placeholder: \"Endere\\xE7o de e-mail\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      value: senha,\n      placeholder: \"Senha\",\n      onChange: e => this.setState({\n        senha: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      value: senha2,\n      placeholder: \"Confirmar Senha\",\n      onChange: e => this.setState({\n        senha2: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Escolha o perfil desse usuario:\"), React.createElement(\"select\", {\n      onChange: e => this.setState({\n        perfil: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"selecione\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, '<selecione>'), perfis.map(perfil => React.createElement(\"option\", {\n      key: perfil.id,\n      value: perfil.nome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, perfil.rotulo)))), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Cadastrar Novo Usuario\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(SignupAdmin);","map":{"version":3,"sources":["/home/dho/Documentos/InCo/frontend/src/pages/Admin/SignUpAdmin/index.js"],"names":["React","Component","withRouter","gql","api","setLinkAtual","Logo","Label","Form","Container","SignupAdmin","state","nome","telefone","email","senha","senha2","perfis","perfil","menssage","carregaPerfis","query","then","resultado","setState","data","erros","catch","e","handleSignUp","preventDefault","mutate","mutation","variables","console","log","novoUsuario","componentDidMount","render","target","value","map","id","rotulo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport gql from \"graphql-tag\"\n\n//Imports de outros arquivos\nimport api from \"../../../services/api\";\nimport { setLinkAtual } from '../../../utils/DestacaLink'\nimport Logo from \"../../../assets/Logo.png\";\n\n//CSS\nimport { Label } from \"./styles\";\nimport { Form, Container } from \"../../../componentsCSS/Form_Cadastro01\";\n\nclass SignupAdmin extends Component {\n  state = {\n    nome: \"\",\n    telefone: \"\",\n    email: \"\",\n    senha: \"\",\n    senha2: \"\",\n    perfis: [],\n    perfil: \"\",\n    menssage: null\n  };\n\n  componentDidMount() { //nao clk o \"() => \", pq e uma funcao da proprio js\n    setLinkAtual('signupAdmin')\n    this.carregaPerfis()\n  }\n  carregaPerfis = async () => {\n    await api.query({\n      query: gql`{perfis { id nome rotulo }}`\n    }).then(resultado => {\n        this.setState({perfis: resultado.data.perfis})\n        this.erros = null\n    }).catch(e => {\n        this.erros = e\n    })\n  }\n  //Cadastrar novo Usuario pela conta admin\n  handleSignUp = async e => {\n   \n    e.preventDefault();\n    const { nome, telefone, email, senha, senha2, perfil } = this.state\n    if (!nome || !telefone || !email || !senha|| !senha2|| !perfil || perfil === 'selecione' ) {\n      this.setState({ menssage: \"Preencha todos os dados para se cadastrar\" })\n    } else if (senha !== senha2){\n      this.setState({ menssage: \"O campo de senha e confirmar senha, estão diferentes!\" });\n    } else {\n      try {\n        const perfis = [{nome: perfil}]//como o frontend por ora so aceita um perfil...\n        api.mutate({\n          mutation: gql`\n            mutation\n            (\n              $nome: String!\n              $email: String!\n              $telefone: String!\n              $senha: String!\n              $perfis: [PerfilFiltro]\n            )\n            {\n              novoUsuario(\n                dados:{\n                  nome: $nome,\n                  telefone: $telefone,\n                  email: $email, \n                  senha: $senha,\n                  perfis: $perfis\n                }\n              )\n            {\n              id nome email telefone\n              ativo created_at updated_at\n              perfis { rotulo }\n            }\n            }\n        `,\n        variables: {\n          nome,\n          email,\n          telefone,\n          senha,\n          perfis,\n        }\n        }).then(resultado => {\n          console.log(resultado.data.novoUsuario)\n          this.setState({ nome: '', telefone: '', email: '', senha: '', senha2: ''})\n          this.setState({ menssage: 'Usuario Cadastrado com sucesso!'})\n        }).catch(e =>  {\n          console.log(e)\n          this.setState({ menssage: 'Email Já Cadastrado!' })}\n          )\n      } catch (e) {\n        console.log(e);\n        this.setState({ menssage: \"Ocorreu um erro ao registrar o novo usuario. T.T\" });\n      }\n    }\n  }\n\n  render() {\n    const {perfis, nome, email, telefone, senha, senha2} = this.state\n    return (\n      <Container>\n        <Form onSubmit={this.handleSignUp}>\n          <img src={Logo} alt=\"Logo\" />\n          {this.state.menssage && <p className='erro'>{this.state.menssage}</p>}\n          <input\n            type=\"text\"\n            value={nome}\n            placeholder=\"Nome Completo\"\n            onChange={e => this.setState({ nome: e.target.value })}\n          />\n          <input \n            type=\"tel\" \n            value={telefone}\n            placeholder=\"Telefone ex: 35 99999-8888\"\n            title=\"Formato: 35 99999-8888\"\n            pattern=\"^\\d{2} \\d{4,5}-\\d{4}$\"\n            onChange={e => this.setState({ telefone: e.target.value })}\n           />\n          <input\n            type=\"email\"\n            value={email}\n            placeholder=\"Endereço de e-mail\"\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            value={senha}\n            placeholder=\"Senha\"\n            onChange={e => this.setState({ senha: e.target.value })}\n          />\n          <input\n            type=\"password\"   \n            value={senha2}\n            placeholder=\"Confirmar Senha\"\n            onChange={e => this.setState({ senha2: e.target.value })}\n          />\n          <Label>\n            <p>Escolha o perfil desse usuario:</p>\n            <select onChange={e => this.setState({ perfil: e.target.value })}>\n            <option value='selecione'>{'<selecione>'}</option>\n              {\n                perfis.map( perfil => (\n                  <option key={perfil.id} value={perfil.nome}>{perfil.rotulo}</option>\n                ))\n              } \n            </select>\n          </Label>\n          <button type=\"submit\">Cadastrar Novo Usuario</button>\n          <hr /> \n        </Form>\n      </Container> \n    );\n  }\n}\n\nexport default withRouter(SignupAdmin);"]},"metadata":{},"sourceType":"module"}